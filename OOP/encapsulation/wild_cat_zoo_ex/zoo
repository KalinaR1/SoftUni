class Zoo:
    def __init__(self, name, budget, animal_capacity, workers_capacity):
        self.name = name
        self.__budget = budget
        self.__animal_capacity = animal_capacity
        self.__workers_capacity = workers_capacity
        self.animals = []
        self.workers = []

    def add_animal(self, animal, price):
        if len(self.animals) == self.__animal_capacity:
            return "Not enough space for animal"
        if self.__budget < price:
            return "Not enough budget"
        self.animals.append(animal)
        self.__budget -= price
        return f"{animal.name} the {animal.__class__.__name__} added to the zoo"

    def hire_worker(self, worker):
        if len(self.workers) == self.__workers_capacity:
            return "Not enough space for worker"
        self.workers.append(worker)
        return f"{worker.name} the {worker.__class__.__name__} hired successfully"

    def fire_worker(self, worker_name):
        try:
            worker = [w for w in self.workers if w.name == worker_name][0]
            self.workers.remove(worker)
            return f"{worker_name} fired successfully"
        except IndexError:
            return f"There is no {worker_name} in the zoo"

    def pay_workers(self):
        all_salaries = sum([s.salary for s in self.workers])
        if self.__budget < all_salaries:
            return "You have no budget to pay your workers. They are unhappy"
        self.__budget -= all_salaries
        return f"You payed your workers. They are happy. Budget left: {self.__budget}"

    def tend_animals(self):
        total_animals = sum([a.get_needs() for a in self.animals])
        if self.__budget < total_animals:
            return "You have no budget to tend the animals. They are unhappy."
        self.__budget -= total_animals
        return f"You tended all the animals. They are happy. Budget left: {self.__budget}"

    def profit(self, amount):
        self.__budget += amount

    def animals_status(self):
        result = f"You have {len(self.animals)} animals"
        lion = [a for a in self.animals if a.__class__.__name__ == 'Lion']
        tiger = [a for a in self.animals if a.__class__.__name__ == 'Tiger']
        cheetah = [a for a in self.animals if a.__class__.__name__ == 'Cheetah']
        result += f"\n----- {len(lion)} Lions:\n"
        result += '\n'.join([f'{l}' for l in lion])
        result += f"\n----- {len(tiger)} Tigers:\n"
        result += '\n'.join([f'{t}' for t in tiger])
        result += f"\n----- {len(cheetah)} Cheetahs:\n"
        result += '\n'.join([f'{c}' for c in cheetah])
        return result

    def workers_status(self):
        result = f"You have {len(self.workers)} workers"
        caretakers = [w for w in self.workers if w.__class__.__name__ == 'Caretaker']
        keepers = [w for w in self.workers if w.__class__.__name__ == 'Keeper']
        vets = [w for w in self.workers if w.__class__.__name__ == 'Vet']
        result += f"\n----- {len(keepers)} Keepers:\n"
        result += '\n'.join([f'{k}' for k in keepers])
        result += f"\n----- {len(caretakers)} Caretakers:\n"
        result += '\n'.join([f'{c}' for c in caretakers])
        result += f"\n----- {len(vets)} Vets:\n"
        result += '\n'.join([f'{v}' for v in vets])
        return result
